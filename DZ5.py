# Урок 5. Рекурсия и алгоритмы

# Задача 1. Задайте список случайных чисел от 1 до 10, выведите все элементы больше 5. Используйте для решения лямбда-функцию.
# 2, 3, 4, 6, 7, 8 -> 6, 7, 8

import random
def dz1():
    my_list = [random.randint(1, 9) for i in range(6)]
    new_list = list(filter(lambda i: i > 5, my_list))

    my_list_str = ", ".join(str(i) for i in my_list)
    new_list_str = ", ".join(str(i) for i in new_list)

    print(f"{my_list_str} -> {new_list_str}")
# dz1()



# Задача 2. Дан список случайных чисел. Создайте список, в который попадают числа, описывающие случайную возрастающую последовательность. 
# Порядок элементов менять нельзя.
# [1, 5, 2, 3, 4, 6, 1, 7] => [1, 2, 3] или [2, 7] или [4, 6, 7] и т.д.

def dz2 ():
    my_list = [random.randint(1, 9) for i in range(8)]

    new_list = []
    new_list.append(my_list[0])

    for i in range(len(my_list)):
        if new_list[-1] < my_list[i]:
            new_list.append(my_list[i])

    print(f"{my_list} => {new_list}")
dz2()

# Задача 3. Задайте список случайных чисел от 1 до 10. Посчитайте, сколько всего совпадающих элементов есть в списке. 
# Удалите все повторяющиеся элементы.
# [1, 4, 2, 3, 4, 6, 1, 7] => 4 элемента совпадают. Список уникальных элементов [1, 4, 2, 3, 6, 7]

def dz3():
    my_list = [random.randint(1, 9) for _ in range(8)]

    new_list = []
    count = 0
    for number in my_list:
        if number in new_list:
            count += 1
        else:
            new_list.append(number)

    new_list = list(set(my_list))

    print(f"{my_list} => {count} элемента(ов) совпадают(ет). Список уникальных элементов {new_list}")
dz3()

# Необязательные задачи не успеваю решить. Обязательно подумаю над их решением позже.

# Задача 4*. (Необязательная). Создайте игру в крестики-нолики.

# Задача 5*. (Необязательная). Двумерный массив размером 5х5 заполнен случайными нулями и единицами. 
# Игрок может ходить только по полям, заполненным единицами. Проверьте, существует ли путь из точки [0, 0] в точку [4, 4] 
# (эти поля требуется принудительно задать равными единице).